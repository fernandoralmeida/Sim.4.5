<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="TabControl">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- TabPanel is a layout container which allows the TabItems to wrap and re-order when selected
						The implementation knows to use this control because it is marked IsItemsHost = True -->
                        <Border Grid.Row="0" Background="{TemplateBinding Background}"/>
                        <TabPanel Grid.Row="0" Margin="10,0,0,0" x:Name="HeaderPanel" Background="Transparent" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>

                        <Border Grid.Row="1" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="0" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">

                            <!-- The implementation switches the content. This control must be named PART_SelectedContentHost -->
                            <ContentPresenter Margin="0" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>

                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowBackground}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowText}"/>
        <Setter Property="Background" Value="Transparent"/>
        <!---->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>

                        <Border Margin="2,0" CornerRadius="0" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="0"/>
                        <!---->
                        <!--
                        <Path x:Name="Border"
                              Data="M 0,20 C50,20 40,1 35,1 25,1 20,1 3,1 0,1 5,20 7,20 15,20 30,20 40,20 Z"
                              Fill="Transparent"/>
                        -->
                        <ContentPresenter Opacity=".5" HorizontalAlignment="Center" Margin="5,0" x:Name="ContentSite" VerticalAlignment="Bottom" RecognizesAccessKey="True" ContentSource="Header"/>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <!--
                            <Setter Property="Foreground" Value="{DynamicResource Hyperlink}"/>
                            -->
                            <Setter Property="Opacity" Value=".80" TargetName="ContentSite"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Foreground" Value="{DynamicResource WindowText}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundPressed}" TargetName="Border"/>
                            <!--
                            <Setter Property="BorderThickness" Value="0,0,0,2" TargetName="Border"/> -->                           
                            <Setter Property="Opacity" Value="1" TargetName="ContentSite"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>